@model UnaPinta.Dto.Models.RequestCreateDto
@{ 
    Layout = "LayoutUnaPinta";
}
<div class="container" style="margin-top:20px;">
    <div class="text-center">
        <p style="font-family: 'Roboto', sans-serif; font-size:30px;">Creación de solicitud</p>
    </div>
    <form enctype="multipart/form-data" id="createRequest">
        <div class="card" style="box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);transition: 0.5s;">
            <div class="card-header">
                <div class="float-right form-check">
                    <input type="checkbox" onclick="hideFields()" class="form-check-input" asp-for="ForMe" id="forMeCheck">
                    <label class="form-check-label">Es para mi</label>
                </div>
            </div>
            <div class="card-body">
                <label style="font-family: 'Roboto', sans-serif;" id="nameLabel">Nombre:</label>
                <input type="text" asp-for="Name" id="Name" data-val-required="El nombre es un campo obligatorio" placeholder="Nombre" class="form-control" />
                <div class="text-center">
                    <span data-valmsg-for="Name" class="text-danger" data-valmsg-replace="true" />
                </div>
                <label style="font-family: 'Roboto', sans-serif;">Centro de donación:</label>
                <input type="text" asp-for="CenterName" id="CenterName" data-val-required="El centro de donacióñ es un campo obligatorio" placeholder="Clinica Independencia" class="form-control" />
                <div class="text-center">
                    <span data-valmsg-for="CenterName" class="text-danger" data-valmsg-replace="true" />
                </div>
                <label style="font-family: 'Roboto', sans-serif;">Dirección:</label>
                <input type="text" asp-for="CenterAddress" id="CenterAddress" data-val-required="La direccion es un campo obligatorio" placeholder="Calle B..." class="form-control" />
                <div class="text-center">
                    <span data-valmsg-for="CenterAddress" class="text-danger" data-valmsg-replace="true" />
                </div>
                <label style="font-family: 'Roboto', sans-serif;">Provincia:</label>
                <select type="text" asp-for="ProvinceCode" id="ProvinceCode" data-val-required="La provincia es un campo obligatorio" placeholder="Santo Domingo" class="form-control">
                </select>
                <div class="text-center">
                    <span data-valmsg-for="ProvinceCode" class="text-danger" data-valmsg-replace="true" />
                </div>
                <label style="font-family: 'Roboto', sans-serif;">Hemocomponentes:</label>
                <select asp-for="BloodComponentId" id="BloodComponentId" data-val-required="El componente es un campo obligatorio" data-val="true" class="form-control">
                    <option selected="selected">Componente</option>
                    <option value="1">Plasma</option>
                    <option value="2">Plaquetas</option>
                    <option value="3">Globulos Blancos</option>
                    <option value="4">Globulos Rojos</option>
                </select>
                <div class="text-center">
                    <span data-valmsg-for="BloodComponentId" class="text-danger" data-valmsg-replace="true" />
                </div>
                <label id="bloodTypeLabel" style="font-family: 'Roboto', sans-serif;">Tipo de sangre</label>
                <select asp-for="BloodTypeId" id="BloodTypeId" data-val-required="El tipo de sangre es un campo obligatorio" data-val="true" class="form-control">
                    <option selected="selected">Tipo de sangre</option>
                    <option value="1">A+</option>
                    <option value="2">A-</option>
                    <option value="3">B+</option>
                    <option value="4">B-</option>
                    <option value="5">AB+</option>
                    <option value="6">AB-</option>
                    <option value="7">O+</option>
                    <option value="8">O-</option>
                </select>
                <div class="text-center">
                    <span data-valmsg-for="BloodTypeId" class="text-danger" data-valmsg-replace="true" />
                </div>
                <label style="font-family: 'Roboto', sans-serif;">Cantidades:</label>
                <input type="number" asp-for="Amount" id="Amount" data-val-required="La cantidad es un campo obligatorio" placeholder="0" class="form-control" />
                <div class="text-center">
                    <span data-valmsg-for="Amount" class="text-danger" data-valmsg-replace="true" />
                </div>
                <label id="birthLabel" style="font-family: 'Roboto', sans-serif;">Fecha de nacimiento:</label>
                <input type="date" asp-for="BirthDate" id="BirthDate" data-val-required="La fecha de nacimiento es un campo obligatorio" placeholder="5" class="form-control" />
                <div class="text-center">
                    <span data-valmsg-for="BirthDate" class="text-danger" data-valmsg-replace="true" />
                </div>
                <label style="font-family: 'Roboto', sans-serif;">Indicación:</label>
                <input type="file" asp-for="PrescriptionImage" id="PrescriptionImage" accept="image/*" data-val-required="La Indicación es un campo obligatorio" class="form-control" />
                <div class="text-center">
                    <span data-valmsg-for="PrescriptionBase64" class="text-danger" data-valmsg-replace="true" />
                </div>
                <label style="font-family: 'Roboto', sans-serif;">Tipos de sangre a donar:</label>
                <select asp-for="PossibleBloodTypes" id="PossibleBloodTypes" data-val-required="El tipo de sangre es un campo obligatorio" data-val="true" class="form-control">
                </select>
                <div class="text-center">
                    <span data-valmsg-for="PossibleBloodTypes" class="text-danger" data-valmsg-replace="true" />
                </div>
                <label style="font-family: 'Roboto', sans-serif;">Mensaje:</label>
                <input type="text" asp-for="PatientStory" id="PatientStory" data-val-required="El Mensaje es un campo obligatorio" class="form-control" />
                <div class="text-center">
                    <span data-valmsg-for="PatientStory" class="text-danger" data-valmsg-replace="true" />
                </div>
                <label style="font-family: 'Roboto', sans-serif;">Fecha límite de respuesta:</label>
                <select asp-for="ResponseDueDateId" id="ResponseDueDateId" data-val-required="La Fecha límite es un campo obligatorio" data-val="true" class="form-control">
                </select>
                <div class="text-center">
                    <span data-valmsg-for="ResponseDueDate" class="text-danger" data-valmsg-replace="true" />
                </div>
                <div class="justify-end">
                    <div>
                        <button type="submit" id="btnSubmit" class="btn btn-success float-right">Crear</button>
                    </div>
                </div>
            </div>
        </div>

    </form>
</div>
<script type="text/javascript">
    let dropdown = $('#PossibleBloodTypes');
    let dropdownBloodTypeId = $('#BloodTypeId');
    let dropdownBloodComponentId = $('#BloodComponentId');
    let dropdownProvince = $('#ProvinceCode');
    dropdownProvince.empty();
    dropdownProvince.append('<option selected="true" disabled>Provincia</option>');
    dropdownProvince.prop('selectedIndex', 0);

    $(document).ready(function () {
        dropdown.empty();
        $("#BloodTypeId").change(function () {
            dropdown.empty();
            dropdown.append('<option selected="true" disabled>Tipo de sangre compatible</option>');
            dropdown.prop('selectedIndex', 0);
            var strSelected = "";
            $("#BloodTypeId option:selected").each(function () {
                strSelected += $(this)[0].value;
            });
            var url = "/BloodRequest/GetBloodTypes/" + strSelected;

            $.post(url, function (data) {
                var result = JSON.stringify(data.content)
                $.each(data.content, function (key, entry) {
                    dropdown.append($('<option></option>').attr('value', entry.id).text(entry.text));
                })
                // do something if necessary
            });
        });

        var url = "/BloodRequest/GetProvinces/";

        $.post(url, function (data) {
            var result = JSON.stringify(data.content)
            $.each(data.content, function (key, entry) {
                dropdownProvince.append($('<option></option>').attr('value', entry.code).text(entry.name));
            })
            // do something if necessary
        });

        getStringDates();
    });

    $("#createRequest").submit(function (event) {
        event.preventDefault();
        var form = $('#createRequest')[0];
        var fd = new FormData(form);

        var token = window.localStorage.getItem("tokenSession");
        for (const entry of fd.entries()) {
            console.log(entry);
        }
        $.ajax({
            url: "https://localhost:44393/api/Requests",
            enctype: 'multipart/form-data',
            data: fd,
            cache: false,
            processData: false,
            contentType: false,
            headers: {
                'Accept': 'application/json',
                'Authorization': 'Bearer ' + token
            },
            type: 'POST',
            success: function (dataofconfirm) {
                console.log(dataofconfirm);
                Swal.fire({
                    title: "Correcto",
                    text: "Solicitud creada correctamente",
                    icon: "success",
                    showCancelButton: true,
                    closeOnConfirm: true,
                    closeOnCancel: true
                });
                $("#createRequest").reset();
                dropdown.empty();
            },
            error: function (dataofconfirm) {
                console.log(dataofconfirm);
                Swal.fire({
                    title: "Error",
                    text: dataofconfirm.responseText,
                    icon: "error",
                    showCancelButton: true,
                    closeOnConfirm: true,
                    closeOnCancel: true
                });
            }
        });
    })
    
    function getStringDates() {
        let dropdown = $('#ResponseDueDateId');
        dropdown.empty();
        dropdown.append('<option selected="true" disabled>Fecha aproximada</option>');
        dropdown.prop('selectedIndex', 0);

        var url = "/BloodRequest/GetStringDates";

        $.get(url, function (data) {
            $.each(data.content, function (key, entry) {
                dropdown.append($('<option></option>').attr('value', entry.code).text(entry.name));
            })
            // do something if necessary
        });
    }

    function hideFields() {
        if ($('#forMeCheck').prop('checked')) {
            $("#Name").hide();
            $("#nameLabel").hide();
            $("#birthLabel").hide();
            $("#BirthDate").hide();
            $("#BloodTypeId").hide();
            $("#bloodTypeLabel").hide();
            var bloodType = window.localStorage.getItem("bloodTypeUser");
            var nameOfUser = window.localStorage.getItem("nameofuser");
            var birthOfUser = window.localStorage.getItem("birthdate");

            var url = "/BloodRequest/GetBloodTypes/" + bloodType;

            $.post(url, function (data) {
                var result = JSON.stringify(data.content)
                $.each(data.content, function (key, entry) {
                    dropdown.append($('<option></option>').attr('value', entry.id).text(entry.text));
                })
                // do something if necessary
            });

            $("#Name").val(nameOfUser);
            $("#BirthDate").val(birthOfUser);

        } else {
            $("#Name").fadeIn();
            $("#nameLabel").fadeIn();
            $("#BloodTypeId").fadeIn();
            $("#bloodTypeLabel").fadeIn();
            $("#birthLabel").fadeIn();
            $("#BirthDate").fadeIn();
            $("#Name").empty();
            $("#BirthDate").empty();
            dropdown.empty();
        }
    }

    function OnSuccess(response) {
        console.log(response);
        if (response.code != 201) {
            Swal.fire({
                title: "Error",
                text: response.responseText,
                icon: "error",
                showCancelButton: true,
                closeOnConfirm: true,
                closeOnCancel: true
            });
        }
        else {
            Swal.fire({
                title: "Correcto",
                text: "Solicitud creada correctamente",
                icon: "success",
                showCancelButton: true,
                closeOnConfirm: true,
                closeOnCancel: true
            });
            document.getElementById("createRequest").reset();
            document.getElementById("PossibleBloodTypes").reset();
            $("#Name").fadeIn();
            $("#nameLabel").fadeIn();
            $("#BloodTypeId").fadeIn();
            $("#bloodTypeLabel").fadeIn();
            $("#birthLabel").hide();
            $("#BirthDate").hide();
            dropdown.empty();
        }
    }
</script>
