@model UnaPinta.Dto.Models.RequestCreate
<div class="container" style="margin-top:20px;">
    <div class="text-center">
        <p style="font-family: 'Roboto', sans-serif; font-size:30px;">Creación de solicitud</p>
    </div>
    <div class="form-check justify-content-end">
        <input type="checkbox" onclick="hideFields()" class="form-check-input" asp-for="ForMe" id="forMeCheck">
        <label class="form-check-label">Es para mi</label>
    </div>
    <div class="card" style="box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);transition: 0.5s;">
        <div class="card-body">
            <form data-ajax="true"
                  data-ajax-method="POST"
                  data-ajax-success="OnSuccess" class="container">
                <label style="font-family: 'Roboto', sans-serif;" id="nameLabel">Nombre:</label>
                <input type="text" asp-for="Name" autocomplete="on" id="Name" data-val-required="El nombre es un campo obligatorio" placeholder="Calle B esquina..." class="form-control" />
                <div class="text-center">
                    <span class="text-danger" data-valmsg-replace="true" />
                </div>
                <label style="font-family: 'Roboto', sans-serif;">Dirección:</label>
                <input type="text" asp-for="CenterAddress" id="CenterAddress" data-val-required="La direccion es un campo obligatorio" placeholder="Calle B esquina..." class="form-control" />
                <div class="text-center">
                    <span class="text-danger" data-valmsg-replace="true" />
                </div>
                <label style="font-family: 'Roboto', sans-serif;">Hemocomponentes:</label>
                <input type="number" asp-for="BloodComponentId" id="BloodComponentId" data-val-required="Hemocomponentes es un campo obligatorio" placeholder="Plaquetas, plasma" class="form-control" />
                <div class="text-center">
                    <span class="text-danger" data-valmsg-replace="true" />
                </div>
                <label style="font-family: 'Roboto', sans-serif;">Tipo de sangre</label>
                @Html.DropDownListFor(Model => Model.BloodTypeId, ViewData["bloodTypesList"] as List<SelectListItem>, "Tipo de sangre", new { @class = "form-control", @id = "bloodtypelist" })
                <div class="text-center">
                    <span class="text-danger" data-valmsg-replace="true" />
                </div>
                <label style="font-family: 'Roboto', sans-serif;">Cantidades:</label>
                <input type="number" asp-for="Amount" id="Amount" data-val-required="La cantidad es un campo obligatorio" placeholder="5" class="form-control" />
                <div class="text-center">
                    <span class="text-danger" data-valmsg-replace="true" />
                </div>
                <label style="font-family: 'Roboto', sans-serif;">Fecha de nacimiento:</label>
                <input type="date" asp-for="BirthDate" id="BirthDate" data-val-required="La fecha de nacimiento es un campo obligatorio" placeholder="5" class="form-control" />
                <div class="text-center">
                    <span class="text-danger" data-valmsg-replace="true" />
                </div>
                <label style="font-family: 'Roboto', sans-serif;">Indicación:</label>
                <input type="file" asp-for="PrescriptionBase64" id="PrescriptionBase64" data-val-required="La Indicación es un campo obligatorio" class="form-control-file" />
                <div class="text-center">
                    <span class="text-danger" data-valmsg-replace="true" />
                </div>
                <label style="font-family: 'Roboto', sans-serif;">Tipos de sangre a donar:</label>                
                <select asp-for="PossibleBloodTypes" id="possiblebloodtype" data-val-required="El tipo de sangre es un campo obligatorio" data-val="true" class="form-control">
                </select>
                <div class="text-center">
                    <span class="text-danger" data-valmsg-replace="true" />
                </div>
                <label style="font-family: 'Roboto', sans-serif;">Mensaje:</label>
                <input type="text" asp-for="PatientStory" id="PatientStory" data-val-required="El Mensaje es un campo obligatorio" class="form-control" />
                <div class="text-center">
                    <span class="text-danger" data-valmsg-replace="true" />
                </div>
                <label style="font-family: 'Roboto', sans-serif;">Fecha límite de respuesta:</label>
                <input type="text" asp-for="ResponseDueDate" id="ResponseDueDate" data-val-required="La Fecha límite es un campo obligatorio" class="form-control" />
                <div class="text-center">
                    <span class="text-danger" data-valmsg-replace="true" />
                </div>
                <br />
                <div class="justify-end">
                    <div>
                        <button onclick="btnRequestBlood()" class="btn btn-success float-right">Crear</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>
<script type="text/javascript">
    //var userName = localStorage.getItem("userKey");
    //var jsonObj = JSON.parse(userName);
    //alert(jsonObj.token);

    let dropdown = $('#possiblebloodtype');
    
    $(document).ready(function () {
        $("#bloodtypelist").change(function () {
            dropdown.empty();
            dropdown.append('<option selected="true" disabled>Tipo de sangre compatible</option>');
            dropdown.prop('selectedIndex', 0);
            var strSelected = "";
            $("#bloodtypelist option:selected").each(function () {
                strSelected += $(this)[0].value;
            });
            var url = "/BloodRequest/GetBloodTypes/" + strSelected;

            $.post(url, function (data) {
                var result = JSON.stringify(data.content)
                alert(result);
                $.each(data.content, function (key, entry) {
                    dropdown.append($('<option></option>').attr('value', entry.id).text(entry.text));
                })
                // do something if necessary
            });
        });
    });
    
    function hideFields() {
        if ($('#forMeCheck').prop('checked')) {
                $("#Name").hide();
                $("#nameLabel").hide();
        } else {
            $("#Name").fadeIn();
            $("#nameLabel").fadeIn();
        }
    }

    function btnRequestBlood() {
        var obj = {};
        obj.bloodRequests = [];
        obj.bloodRequests.push({
            bloodComponentId: $("#BloodComponentId").val(),
            amount: $("#Amount").val(),
            name: $("#Name").val(),
            centerAddress: $("#CenterAddress").val(),
            bloodTypeId: $("#BloodTypeId").val(),
            document: null,
            birthDate: $("#BirthDate").val(),
            prescriptionBase64: $("#PrescriptionBase64").val(),
            possibleBloodTypesId: $("#PossibleBloodTypesId").val(),
            patientStory: $("#PatientStory").val(),
            responseDueDate: $("#ResponseDueDate").val(),
            forMe: false
        });

        $.ajax({
            url: 'https://localhost:44393/api/Requests',
            method: "POST",
            data: JSON.stringify(obj),
            dataType: "json",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json',
                'Authorization': `Bearer ${jsonObj.token}`
            }
        }).done(onSuccess)
            .fail(onError)
            .always(always);
    }

    function OnSuccess(response) {
        if (response != 200) {

        }
        else {

        }
    }
</script>
